apply plugin: 'com.taobao.android.emas'
//apply plugin: 'com.android.application'
apply from: 'dexPatchWraper.gradle'
apply from: 'common.gradle'
group = MAVEN_BASE_GROUP
version = android.defaultConfig.versionName + '-SNAPSHOT'

//TODO do this in plugin
configurations {
    providedCompile
    all*.exclude group: 'com.android.support', module: 'multidex'
    all*.exclude group: 'com.taobao.android', module: 'tnet-jni'
    all*.exclude group: 'com.taobao.android', module: 'tlog_adapter'
}

configurations.all {
    resolutionStrategy {
        cacheChangingModulesFor(0, 'SECONDS')
        cacheChangingModulesFor(0, 'SECONDS')
    }
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    compileOptions.encoding = 'UTF-8'

    signingConfigs {
        debug {
            storeFile file(rootProject.rootDir.toString() + DEBUG_STOREFILE)
            storePassword DEBUG_STOREPASSWORD
            keyAlias DEBUG_KEYALIAS
            keyPassword DEBUB_KEYPASSWORD
        }

        release {
            storeFile file(rootProject.rootDir.toString() + RELEASE_STOREFILE)
            storePassword RELEASE_STOREPASSWORD
            keyAlias RELEASE_KEYALIAS
            keyPassword RELEASE_KEYPASSWORD
            v1SigningEnabled true
            v2SigningEnabled Boolean.valueOf(V2_SIGNING)
        }
    }

    defaultConfig {
        multiDexEnabled true
        applicationId 'com.emas.demo'
        ndk {
            abiFilters "x86", "armeabi"  //默认只启用x86,armeabi
        }
        resConfigs "en", "fr"
    }

    dexOptions {
        jumboMode = true
        preDexLibraries = true

        //20180428修改 之前是2048现在是768
        javaMaxHeapSize = '2048m'
        //javaMaxHeapSize = '768m'
    }

    buildTypes {
        debug {
            // debug模式
            multiDexEnabled true
            // 是否进行混淆
            minifyEnabled false
            proguardFile 'proguard.cfg'
            signingConfig signingConfigs.debug

        }

        release {
            multiDexEnabled true
            shrinkResources false
            // 是否进行混淆
            minifyEnabled true
            proguardFile 'proguard.cfg'
            signingConfig signingConfigs.release

        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

}

    dependencies {

        compile('com.emas.lib:emas-core:1.0.11-SNAPSHOT@aar') { transitive true }
        /************基础库 START**********/
        compile('com.alibaba:fastjson:1.1.54.android@jar') { transitive true }
        compile('com.taobao.android:mtopsdk_allinone:3.0.8.1-open@jar') { transitive true }
        compile('com.taobao.android:networksdk:3.3.7-open@jar') { transitive true }
        compile('com.taobao.android:tnet4android:3.1.14.6@aar') { transitive true }
        compile('com.taobao.android:utdid4all:1.1.5.3_proguard@jar') { transitive true }
        /************基础库 END**********/

        /************UPDATE START**********/
        compile('com.taobao.android:atlas_core:5.0.8.7-rc2-all@aar') { transitive true }
        compile('com.taobao.android:open-update-aar:1.0.1-open@aar') {
            transitive true
        }
        compile('com.taobao.android:downloader:2.0.2.12@jar') { transitive true }
        /************UPDATE END**********/


        /************高可用 SDK START**********/
        compile('com.taobao.android:accs_sdk_taobao:3.3.3.1-open') { transitive true }
        compile('com.taobao.android:ut-analytics:1.1.0.1-open@aar') { transitive true }
        compile('com.alibaba.ha:alihatbadapter:1.1.0.3-open@aar') {
            transitive true
            //exclude group:'com.taobao.android', module:'tlog_uploader_oss'
        }
        //compile ('com.taobao.android:tlog_uploader_ceph:1.1.0.3-open@aar')
        //默认oss通道需要依赖oss的三方库
        compile ('com.squareup.okhttp3:okhttp:3.4.1@jar')
        compile ('com.squareup.okio:okio:1.9.0@jar')
        compile ('com.aliyun.dpa:oss-android-sdk:2.4.2@aar')
        /************高可用 SDK END**********/

        /************WEEX SDK START**********/
        compile ("com.taobao.android:weex_sdk:0.18.15.17") { transitive true }
        compile('com.taobao.android:zcache:0.1.2-open') { transitive true }
        compile('com.alibaba.mtl:dynamicConfig:0.1.0.10') { transitive true }
        compile('com.alibaba.mtl:dynamicconfigadapter:0.1.0.10') { transitive true }
        compile('com.android.support:recyclerview-v7:26.+') { transitive true }
        compile 'com.android.support:appcompat-v7:26.+'
        /************WEEX SDK END**********/

        /************配置 SDK START**********/
        compile('com.taobao.android:orange:2.0.0-emas'){
            exclude group: 'com.alibaba', module: 'fastjson'
            transitive true }
        /************配置 SDK END**********/

        compile('com.alibaba.android.emas:emas-man:1.0.0-SNAPSHOT')

        //demo自身用到的库
        //Weex module
        compile("com.taobao.emas.weex:weex:1.0.1.6-SNAPSHOT@aar") {
            transitive true
            exclude group: 'com.alibaba.mtl', module: 'dynamicConfig'
            exclude group: 'com.alibaba.mtl', module: 'dynamicconfigadapter'
            exclude group: 'com.android.support', module: 'appcompat-v7'
            exclude group: 'com.android.support', module: 'recyclerview-v7'
        }
        compile 'com.android.support:design:26.1.0'
        compile("com.taobao.android:native_crash_test:1.0.0.1@aar") { transitive true }
        compile("com.journeyapps:zxing-android-embedded:3.2.0@aar") { transitive true }
        compile("com.google.zxing:core:3.2.1@jar") { transitive true }

        // 公有云推送SDK
        compile ('com.aliyun.emas:alicloud-android-push:3.1.3.2') {
            exclude group: 'com.aliyun.ams', module: 'alicloud-android-ut'
            exclude group: 'com.aliyun.ams', module: 'alicloud-android-utdid'
        }
    }



task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
    distributionUrl = 'http://emas-deploy.oss-cn-hangzhou.aliyuncs.com/gradle-3.3-all.zip'
}

tasks.whenTaskAdded { task ->
    if (task.name.contains("DebugAndroidTest")) {
        task.setEnabled(false);
    }
}

//apply from: 'http://gitlab.alibaba-inc.com/mhub-android-bootstrap/gradlescript/raw/master/common.gradle'
//apply from: 'http://gitlab.alibaba-inc.com/mhub-android-bootstrap/gradlescript/raw/master/mhub-repo.gradle'
//apply from: 'http://gitlab.alibaba-inc.com/mhub-android-bootstrap/gradlescript/raw/master/mhub-env.gradle'
//apply from: 'http://gitlab.alibaba-inc.com/mhub-android-bootstrap/gradlescript/raw/master/mhub-dep.gradle'


apply plugin: 'maven'
apply plugin: 'maven-publish'

publishing {
    publications {
        maven(MavenPublication) {
            if (project.gradle.startParameter.toString().contains("assembleDebug")) {
                artifact "${project.buildDir}/outputs/apk/debug/${project.name}-debug.ap"
                artifactId MAVEN_BASE_ARTIFACTID + "-debug"
            } else {
                artifact "${project.buildDir}/outputs/apk/release/${project.name}-release.ap"
                artifactId MAVEN_BASE_ARTIFACTID + "-release"
            }

        }
    }

    repositories {
        if (version.endsWith("-SNAPSHOT")) {
            maven {
                url "http://" + CUSTOM_REPOSITORY_HOST + "/repository/maven-snapshots/"
                credentials {
                    username = CUSTOM_REPOSITORY_USERNAME
                    password = CUSTOM_REPOSITORY_PASSWORD
                }
            }
        } else {
            maven {
                url "http://" + CUSTOM_REPOSITORY_HOST + "/repository/maven-releases/"
                credentials {
                    username = CUSTOM_REPOSITORY_USERNAME
                    password = CUSTOM_REPOSITORY_PASSWORD
                }
            }
        }

    }
}

//publishing {
//
//    publications {
//        maven(MavenPublication) {
//            if (components.hasWithName("java")) {
//                from components.java
//            } else if (components.hasWithName("android")) {
//                from components.android
//            } else {
//                artifact  "${project.buildDir}/outputs/aar/${project.name}-release.aar"
//
//                pom.withXml {
//                    def dependenciesNode = asNode().appendNode('dependencies')
//                    configurations.compile.allDependencies.each {
//                        if (it.group != null && (it.name != null || "unspecified" == it.name) && it.version != null) {
//
//                            def dependencyNode = dependenciesNode.appendNode('dependency')
//                            dependencyNode.appendNode('groupId', it.group)
//                            dependencyNode.appendNode('artifactId', it.name)
//                            dependencyNode.appendNode('version', it.version)
//                        }
//                    }
//                }
//            }
//        }
//    }
//
//
//}